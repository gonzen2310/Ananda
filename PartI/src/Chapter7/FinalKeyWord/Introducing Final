Final prevents content from being modified, making it, essentially a CONSTANT
You must initialize a FINAL field when it is DECLARED;
You can do this in two ways:
    1. You can give it a value when it is declared
    2. You can assign it a value with in a constructor
E.g:
    final int FILE_NEW = 1;
    final int FILE_OPEN = 2;
    final int FILE_SAVE = 3;
    final int FILE_SAVEAS = 4;
    final int FILE_QUIT = 5;
- It's a common coding convention to choose all uppercase identifiers for FINAL fields
- In addition to fields, both METHOD PARAMETERS and LOCAL VARIABLES can be declared
  as FINAL.
    1. Declaring a PARAMETER FINAL prevents it from being changed with the method
    2. Declaring a LOCAL VARIABLE FINAL prevents it from being assigned a value more
       than once
- Final can also be applied to METHODS, but its meaning is substantially different
  than when it is applied to variables.