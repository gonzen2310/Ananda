There will be times when you will want to define a CLASS MEMBER that will be used
INDEPENDENTLY of any OBJECT of that class.
    - Normally, a CLASS MEMBER must be accessed only in conjunction with an object
      of its CLASS
    - However, it is possible to create a MEMBER that can be used by itself, without
      reference to a specific instance.
    - To create such a member, precede its declaration with the keyword "STATIC"

- When a member is declared STATIC, it can be accessed before any objects of its class
are created, and without reference to any OBJECT.
- You can declare both METHODS and VARIABLES to be "STATIC"
    - E.g. main() (Main must be called before any objects exist)
- Instance variables declared as STATIC are essentially GLOBAL variables
- When OBJECTS of its CLASS are declared, no copy of a STATIC variable is made
    - Instead, all instances of the class share the same STATIC VARIABLE
- Methods declares as STATIC have several restrictions:
    1. They can only DIRECTLY call other STATIC METHODS
    2. They can only DIRECTLY access STATIC DATA
    3. They cannot refer to "THIS" or "SUPER" in any way.
- If you need to do computation in order to initialize your STATIC VARIABLES,
  you can declare a STATIC BLOCK that gets executed exactly once, when the
  class is first loaded.

- Outside of the CLASS in which they are defined, STATIC METHODS and VARIABLES can
  be used independently of any object. To do so, you need only specify the name of
  their CLASS followed by the dot operator.